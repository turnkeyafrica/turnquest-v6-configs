server:
  port: 4017
  servlet:
    context-path: /
  error:
    include-message: always
  endpoints:
    web:
      exposure:
        include: [ "health", "info", "metrics", "prometheus", "bindings", "beans", "env", "loggers", "streamsbindings", "mappings","flyway" ]
app:
  name: TurnQuest Version Vi Integrated GIS Underwriting System
  configurations:
    password-strength: 3
    password-length: 6
  auth:
    server:
      realm-url: http://10.176.18.211:8181/realms/turnquest-version-six
  rolesClaim: roles
  locale:
    baseName: i18n/messages
    defaultLang: en

spring:
  sleuth:
    sampler:
      probability: 1.0
  messages:
    basename: i18n/messages
  application:
    name: gis-payments-service
    jackson:
      serialization:
        FAIL_ON_EMPTY_BEANS: false
  datasource:
    initialization-mode: always
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      allow-pool-suspension: true
  jpa:
    hibernate:
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      ddl-auto: none
    generate-ddl: false
    show-sql: false
    properties:
      hibernate:
        proc:
          param_null_passing: true
        #dialect: org.hibernate.dialect.Oracle10gDialect
  management:
    zipkin:
      tracing:
        endpoint: http://10.176.18.27:9411
  cloud:
    config:
      import-check:
        enabled: false
      server:
        git:
          uri: https://github.com/turnkeyafrica/turnquest-v6
          searchPaths: gis-quotation-configs
  kafka:
    bootstrap-servers: ${kafka:localhost:9092}
    consumer:
      auto-offset-reset: earliest
    # change this property if you are using your own Kafka cluster or your Docker IP is different
    #bootstrap-servers: 10.176.18.211:29092
    client-id: gis-quotation-service
  security:
    oauth2:
      resource:
        id: turnquest-version-6-apis
        token-uri: ${app.auth.server.realm-url}/protocol/openid-connect/token
        authorization-uri: ${app.auth.server.realm-url}/protocol/openid-connect/auth
        userinfo-uri: ${app.auth.server.realm-url}/protocol/openid-connect/userinfo
        token-info-uri: ${app.auth.server.realm-url}/protocol/openid-connect/token/introspect
        user-info-uri: ${app.auth.server.realm-url}/protocol/openid-connect/userinfo
      resourceserver:
        jwt:
          issuer-uri: ${app.auth.server.realm-url}
          jwk-set-uri: ${app.auth.server.realm-url}/protocol/openid-connect/certs
  flyway:
    locations: classpath:/db/migration/oracle
    baseline-on-migrate: false #NEVER CHANGE BASELINE TO TRUE
    validate-on-migrate: false #true to populate local DB
    table: schema_version
    enabled: true
    ignore-missing-migrations: false
    out-of-order: true
  quartz:
    job-store-type: jdbc
    enabled: false
    properties:
      org:
        quartz:
          jobStore:
            isClustered: true
            driverDelegateClass: 'org.quartz.impl.jdbcjobstore.StdJDBCDelegate'
            class: 'org.quartz.impl.jdbcjobstore.JobStoreTXthreadPool'
            tablePrefix: 'QRTZ_'
            selectWithLockSQL: 'SELECT * FROM {0}LOCKS WHERE SCHED_NAME = {1} AND LOCK_NAME = ? FOR UPDATE'
          threadPool:
            threadCount: 5
defaultTenant: v6test
# configure eureka client
eureka:
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 3
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://10.176.18.211:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
instanceId: gis-quotation-service-instance
env: environment

logging:
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} [%X{tenantId:-gis}] %-5level %logger{36} - %msg%n'
#  level:
#    org:
#      hibernate:
#        SQL: DEBUG
#        type:
#          descriptor:
#            sql:
#              BasicBinder: TRACE

turnquest:
  api:
    basePath:
      v1: "/api/v1"
      v2: "/api/v2"

  crm:
    setupsService: "http://10.176.18.211:1034"

  feign:
    client:
      config:
        premium-computation-engine:
          url: http://localhost:4020

mpesa:
  daraja:
    stkPassKey: bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919
    stkPushShortCode: 174379
    verifyPaymentUrl: https://sandbox.safaricom.co.ke/mpesa/stkpushquery/v1/query
    stkPushRequestUrl: https://sandbox.safaricom.co.ke/mpesa/stkpush/v1/processrequest
    stkPushCallbackUrl: https://cc6e-41-72-192-18.ngrok-free.app/api/v1/mpesa/stkcallback
    #    stkPushCallbackUrl: https://adf94cda8cd2.ngrok.io/mobile-money/stk-transaction-result
    consumer-key: uulMBX8gkHhAAmGfarCsdp1s8ZbERHoCcEz17Om79kDvVFFx
    consumer-secret: MV5aRzwd1hZzXv0iiyCacSyveHAL3StWTeleObLvIhSQKEsf92KqkHlvM6oFJB2n
    grant-type: client_credentials
    oauth-endpoint: https://sandbox.safaricom.co.ke/oauth/v1/generate
    queryStatusUrl: https://sandbox.safaricom.co.ke/mpesa/stkpushquery/v1/query

multitenancy:
  defaultTenant: turnquest
  include: turnquest,v6test,heritage19c
  tenants:
    turnquest:
      datasource:
        url: jdbc:oracle:thin:@10.176.18.211:18000/TURNQUESTVI
        username: TQ_GIS
        password: TQ_GIS
        driver-class-name: oracle.jdbc.OracleDriver
    heritage:
      datasource:
        url: jdbc:oracle:thin:@10.176.18.91:1521/HERITAGE
        username: TQ_GIS
        password: TQ_GIS
        driver-class-name: oracle.jdbc.OracleDriver
    heritage19c:
      datasource:
        url: jdbc:oracle:thin:@10.176.18.91:1522/heritage19c
        username: TQ_GIS
        password: TQ_GIS
        driver-class-name: oracle.jdbc.OracleDriver
    v6test:
      datasource:
        url: jdbc:oracle:thin:@10.176.18.70:18000/TQV6
        username: TQ_GIS
        password: TQ_GIS
        driver-class-name: oracle.jdbc.OracleDriver